# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""
Make users optional with Macaroons

Revision ID: 96584a128c9f
Revises: 5e02c4f9f95c
Create Date: 2022-04-20 15:19:14.035186
"""

from alembic import op
import sqlalchemy as sa


revision = '96584a128c9f'
down_revision = '5e02c4f9f95c'

# Note: It is VERY important to ensure that a migration does not lock for a
#       long period of time and to ensure that each individual migration does
#       not break compatibility with the *previous* version of the code base.
#       This is because the migrations will be ran automatically as part of the
#       deployment process, but while the previous version of the code is still
#       up and running. Thus backwards incompatible changes must be broken up
#       over multiple migrations inside of multiple pull requests in order to
#       phase them in over multiple deploys.

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_project_events_source_id', table_name='project_events')
    op.drop_constraint('project_events_project_id_fkey', 'project_events', type_='foreignkey')
    op.create_foreign_key(None, 'project_events', 'projects', ['source_id'], ['id'], initially='DEFERRED', deferrable=True)
    op.drop_index('ix_user_events_source_id', table_name='user_events')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_user_events_source_id', 'user_events', ['source_id'], unique=False)
    op.drop_constraint(None, 'project_events', type_='foreignkey')
    op.create_foreign_key('project_events_project_id_fkey', 'project_events', 'projects', ['source_id'], ['id'], ondelete='CASCADE', initially='DEFERRED', deferrable=True)
    op.create_index('ix_project_events_source_id', 'project_events', ['source_id'], unique=False)
    # ### end Alembic commands ###
