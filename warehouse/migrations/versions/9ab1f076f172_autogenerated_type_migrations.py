# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""
Autogenerated type migrations

Revision ID: 9ab1f076f172
Revises: eb736cb3236d
Create Date: 2023-03-08 16:06:48.588093
"""

import sqlalchemy as sa

from alembic import op

revision = "9ab1f076f172"
down_revision = "eb736cb3236d"


def upgrade():
    op.alter_column(
        "organization_invitations",
        "invite_status",
        existing_type=sa.TEXT(),
        type_=sa.Enum("pending", "expired", name="invite_status"),
        existing_nullable=False,
    )
    op.alter_column(
        "organization_roles",
        "role_name",
        existing_type=sa.TEXT(),
        type_=sa.Enum(
            "Owner", "Billing Manager", "Manager", "Member", name="role_name"
        ),
        existing_nullable=False,
    )
    op.alter_column(
        "organizations",
        "orgtype",
        existing_type=sa.TEXT(),
        type_=sa.Enum("Community", "Company", name="orgtype"),
        existing_nullable=False,
    )
    op.alter_column(
        "role_invitations",
        "invite_status",
        existing_type=sa.TEXT(),
        type_=sa.Enum("pending", "expired", name="invite_status"),
        existing_nullable=False,
    )
    op.alter_column(
        "team_project_roles",
        "role_name",
        existing_type=sa.TEXT(),
        type_=sa.Enum("Owner", "Maintainer", name="role_name"),
        existing_nullable=False,
    )
    op.alter_column(
        "team_roles",
        "role_name",
        existing_type=sa.TEXT(),
        type_=sa.Enum("Member", name="role_name"),
        existing_nullable=False,
    )


def downgrade():
    op.alter_column(
        "team_roles",
        "role_name",
        existing_type=sa.Enum("Member", name="role_name"),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
    op.alter_column(
        "team_project_roles",
        "role_name",
        existing_type=sa.Enum("Owner", "Maintainer", name="role_name"),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
    op.alter_column(
        "role_invitations",
        "invite_status",
        existing_type=sa.Enum("pending", "expired", name="invite_status"),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
    op.alter_column(
        "organizations",
        "orgtype",
        existing_type=sa.Enum("Community", "Company", name="orgtype"),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
    op.alter_column(
        "organization_roles",
        "role_name",
        existing_type=sa.Enum(
            "Owner", "Billing Manager", "Manager", "Member", name="role_name"
        ),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
    op.alter_column(
        "organization_invitations",
        "invite_status",
        existing_type=sa.Enum("pending", "expired", name="invite_status"),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
