# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Admin Views related to Observations"""

from pyramid.view import view_config

from warehouse.authnz import Permissions
from warehouse.observations.models import Observation


@view_config(
    route_name="admin.malware_reports.list",
    renderer="admin/malware_reports/list.html",
    permission=Permissions.AdminObservationsRead,
    request_method="GET",
    uses_session=True,
    require_csrf=True,
    require_methods=False,
)
def malware_reports_list(request):
    """
    List all Malware Reports.

    TODO: Paginate this view, not worthwhile just yet.
          Client-side pagination is a good enough solution for now.
    """
    malware_observations = (
        request.db.query(Observation)
        .filter(Observation.kind == "is_malware")
        # TODO: filter by handled or not, once we have a way to handle them
        .order_by(Observation.created)
        .all()
    )

    return {"malware_reports": malware_observations}


@view_config(
    route_name="admin.malware_reports.detail",
    renderer="admin/malware_reports/detail.html",
    permission=Permissions.AdminObservationsRead,
    request_method="GET",
    uses_session=True,
    require_csrf=True,
    require_methods=False,
)
def malware_reports_detail(request):
    """
    Show a detailed view of a Malware Report.
    """
    observation_id = request.matchdict.get("observation_id")
    observation = request.db.query(Observation).get(observation_id)

    return {"report": observation}
