# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from warehouse.malware.models import MalwareCheck, MalwareCheckState, MalwareVerdict


class MalwareCheckBase:
    def __init__(self, db):
        self.db = db
        self._name = self.__class__.__name__
        self._load_check_id()
        self._verdicts = []

    def add_verdict(self, **kwargs):
        self._verdicts.append(MalwareVerdict(check_id=self.id, **kwargs))

    def run(self, obj_id):
        """
        Runs the check and inserts returned verdicts.
        """
        self.scan(obj_id)
        self.db.add_all(self._verdicts)

    def scan(self, obj_id):
        """
        Scans the object and returns a verdict.
        """

    def backfill(self, sample=1):
        """
        Runs the check across all historical data in PyPI. The sample value represents
        the percentage of files to file the check against. By default, it will run the
        backfill on the entire corpus.
        """

    def _load_check_id(self):
        self.id = (
            self.db.query(MalwareCheck.id)
            .filter(MalwareCheck.name == self._name)
            .filter(MalwareCheck.state == MalwareCheckState.enabled)
            .one()
        )
