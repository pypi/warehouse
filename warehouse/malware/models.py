# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import enum

from citext import CIText
from sqlalchemy import Column, DateTime, Enum, Integer, String, UniqueConstraint, sql

from warehouse import db
from warehouse.utils.attrs import make_repr


class MalwareCheckTypes(enum.Enum):

    EventHook = "event_hook"
    Scheduled = "scheduled"


class MalwareCheckState(enum.Enum):

    Enabled = "enabled"
    Disabled = "disabled"
    WipedOut = "wiped_out"


class MalwareCheck(db.Model):

    __tablename__ = "malware_checks"
    __table_args__ = (UniqueConstraint("name", "version"),)
    __repr__ = make_repr("name", "version")

    name = Column(CIText, nullable=False)
    version = Column(Integer, default=0, nullable=False)
    short_description = Column(String(length=128), nullable=False)
    long_description = Column(String(length=512), nullable=False)
    check_type = Column(
        Enum(MalwareCheckTypes, values_callable=lambda x: [e.value for e in x]),
        nullable=False,
    )
    # This field contains the same content as the ProjectEvent and UserEvent "tag"
    # fields.
    hook_name = Column(String, nullable=True)
    state = Column(
        Enum(MalwareCheckState, values_callable=lambda x: [e.value for e in x]),
        nullable=False,
    )
    date_added = Column(DateTime, nullable=False, server_default=sql.func.now())
