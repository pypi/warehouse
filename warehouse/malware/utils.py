# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import functools
import inspect

from collections import defaultdict

from warehouse.malware.models import (
    MalwareCheck,
    MalwareCheckObjectType,
    MalwareCheckState,
    MalwareCheckType,
)


@functools.lru_cache()
def valid_check_types():
    return set([t.value for t in MalwareCheckObjectType])


def get_check_fields(check):
    elems = inspect.getmembers(check, lambda a: not (inspect.isroutine(a)))
    result = {"name": check.__name__}
    for elem_name, value in elems:
        if not elem_name.startswith("__"):
            result[elem_name] = value
    return result


def get_enabled_checks(session):
    checks = (
        session.query(MalwareCheck.name, MalwareCheck.hooked_object)
        .filter(MalwareCheck.check_type == MalwareCheckType.event_hook)
        .filter(MalwareCheck.state == MalwareCheckState.enabled)
        .all()
    )
    results = defaultdict(list)

    for check_name, object_type in checks:
        results[object_type.value].append(check_name)

    return results
