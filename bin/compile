#!/bin/bash

# Fail fast and fail hard.
set -eo pipefail

# Versions
H2O_VERSION="2.0.4"
CMAKE_VERSION="3.7.1"

# Paths.
BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
ROOT_DIR=$(dirname $BIN_DIR)
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# Sanitizing environment variables.
unset GIT_DIR PYTHONHOME PYTHONPATH LD_LIBRARY_PATH LIBRARY_PATH
unset RECEIVE_DATA RUN_KEY BUILD_INFO DEPLOY LOG_TOKEN DYNO
unset CYTOKINE_LOG_FILE GEM_PATH

# Source our utilities
source $BIN_DIR/utils.sh

if ! test -d $CACHE_DIR/h2o || ! test -f $CACHE_DIR/h2o/h2o-version || [ $(cat $CACHE_DIR/h2o/h2o-version) != "$H2O_VERSION" ]; then
    puts-step "Cleaning cached H2O Version"
    rm -rf $CACHE_DIR/h2o
    mkdir -p "$CACHE_DIR/h2o"

    puts-step "Downloading Packages"
    puts-line "Downloading CMake"
    curl "https://cmake.org/files/v3.7/cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz" -sL -o - | tar xzf - -C $BUILD_DIR
    puts-line "Downloading H2O $H2O_VERSION"
    curl "https://github.com/h2o/h2o/archive/v${H2O_VERSION}.tar.gz" -sL -o - | tar xzf - -C $BUILD_DIR
    cd "$BUILD_DIR/h2o-$H2O_VERSION"

    PATH="$BUILD_DIR/cmake-$CMAKE_VERSION-Linux-x86_64/bin:$PATH"

    puts-step "Compiling H2O"
    cmake -DCMAKE_INSTALL_PREFIX=$BUILD_DIR -DWITH_BUNDLED_SSL=on -DWITH_MRUBY=off
    make

    puts-step "Cache Our Build"
    cp "$BUILD_DIR/h2o-$H2O_VERSION/h2o" "$CACHE_DIR/h2o/h2o"
    echo "$H2O_VERSION" > $CACHE_DIR/h2o/h2o-version

    puts-step "Cleaning up Build"
    rm -rf "$BUILD_DIR/cmake-$CMAKE_VERSION-Linux-x86_64"
    rm -rf "$BUILD_DIR/h2o-$H2O_VERSION"
fi


puts-step "Installing H2o"
cp "$CACHE_DIR/h2o/h2o" "$BIN_DIR"
