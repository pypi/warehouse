# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import datetime

import factory

from warehouse.malware.models import (
    MalwareCheck,
    MalwareCheckObjectType,
    MalwareCheckState,
    MalwareCheckType,
    MalwareVerdict,
    VerdictClassification,
    VerdictConfidence,
)

from .base import WarehouseFactory
from .packaging import FileFactory


class MalwareCheckFactory(WarehouseFactory):
    class Meta:
        model = MalwareCheck

    name = factory.Faker("pystr", max_chars=12)
    version = 1
    short_description = factory.Faker("sentence", nb_words=6)
    long_description = factory.Faker("sentence", nb_words=12)
    check_type = factory.Faker("random_element", elements=list(MalwareCheckType))
    hooked_object = factory.Faker(
        "random_element", elements=list(MalwareCheckObjectType)
    )
    schedule = {"minute": "*/10"}
    state = factory.Faker("random_element", elements=list(MalwareCheckState))
    created = factory.Faker(
        "date_time_between_dates",
        datetime_start=datetime.datetime.utcnow() - datetime.timedelta(days=7),
    )


class MalwareVerdictFactory(WarehouseFactory):
    class Meta:
        model = MalwareVerdict

    check = factory.SubFactory(MalwareCheckFactory)
    release_file = factory.SubFactory(FileFactory)
    release = None
    project = None
    manually_reviewed = True
    reviewer_verdict = factory.Faker(
        "random_element", elements=list(VerdictClassification)
    )
    classification = factory.Faker(
        "random_element", elements=list(VerdictClassification)
    )
    confidence = factory.Faker("random_element", elements=list(VerdictConfidence))
    message = factory.Faker("paragraph")
    run_date = factory.Faker("date_time_between_dates")
    full_report_link = None
    details = None
