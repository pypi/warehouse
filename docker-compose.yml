db:
  image: postgres:9.6
  ports:
    # 5432 may already in use by another PostgreSQL on host
    - "5433:5432"

redis:
  image: redis:latest

rabbitmq:
  image: rabbitmq:latest

elasticsearch:
  image: elasticsearch:5

camo:
  image: pypa/warehouse-camo:latest
  ports:
    - "9000:9000"
  environment:
    CAMO_KEY: "insecure camo key"

app:
  build: .
  volumes:
    # We specify all of these directories instead of just . because we want to
    # avoid having ./node_modules from the host OS being shared with the docker
    # container, and since there's no way to exclude a directory, the only way
    # to make this work is to share multiple, smaller directories. These cover
    # the important things that we want to share, but changes to requirements
    # or any file not in these directories will require a rebuild.
    # The :z option fixes permission issues with SELinux by setting a
    # permissive security context.
    - ./dev:/app/dev:z
    - ./docs:/app/docs:z
    - ./warehouse:/app/warehouse:z
    - ./tests:/app/tests:z
    - ./htmlcov:/app/htmlcov:z
  environment:
    WAREHOUSE_ENV: development
    WAREHOUSE_TOKEN: insecuretoken
    # Uncomment the below line if you're working on the PyPI theme, this is a
    # private repository due to the fact that other people's IP is contained in
    # it.
    # WAREHOUSE_THEME: pypi_theme.pypi
    AMQP_URL: amqp://guest@rabbitmq:5672//
    DATABASE_URL: postgresql://postgres@db/warehouse
    ELASTICSEARCH_URL: http://elasticsearch:9200/development
    REDIS_URL: redis://redis:6379/0
    SESSION_SECRET: "an insecure development secret"
    CAMO_URL: "{request.scheme}://{request.domain}:9000/"
    CAMO_KEY: "insecure camo key"
    DOCS_URL: "https://pythonhosted.org/{project}/"
    FILES_BACKEND: "warehouse.packaging.services.LocalFileStorage path=/app/data/packages/ url=http://files.example.com/packages/{path}"
    RECAPTCHA_SITE_KEY: "${RECAPTCHA_SITE_KEY}"
    RECAPTCHA_SECRET_KEY: "${RECAPTCHA_SECRET_KEY}"
    STATUSPAGE_URL: https://2p66nmmycsj3.statuspage.io

web:
  extends:
    service: app
  command: hupper -m twisted --log-format text web -p tcp:port=8000 --wsgi warehouse.wsgi.application
  environment:
    PORT: 8000
  ports:
    - "80:8000"
  links:
    - db
    - redis
    - rabbitmq
    - elasticsearch

worker:
  extends:
    service: app
  command: celery -A warehouse worker -B -S redbeat.RedBeatScheduler -l info
  environment:
    C_FORCE_ROOT: "1"
  links:
    - db
    - redis
    - rabbitmq
    - elasticsearch

static:
  extends:
    service: app
  command: gulp watch
