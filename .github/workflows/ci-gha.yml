name: CI (GHA)
on:
  push:
    branches:
      - main
  pull_request:
  merge_group:
    types: [checks_requested]
  workflow_dispatch:  # generally only for the "combine-prs" workflow
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-24.04-arm
    outputs:
      buildId: ${{ github.run_id }}
    permissions:
      packages: write
    steps:
      - name: Check out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: Cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3 # zizmor: ignore[cache-poisoning]
        id: cache
        with:
          path: |
            var-cache-apt
            var-lib-apt
            root-cache-pip
            root-npm
          key: cache-${{ hashFiles('Dockerfile') }}
      - name: inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@653a570f730e3b9460adc576db523788ba59a0d7 # v3.2.0
        with:
          cache-map: |
            {
              "var-cache-apt": "/var/cache/apt",
              "var-lib-apt": "/var/lib/apt",
              "root-cache-pip": "/root/.cache/pip",
              "root-npm": "/root/.npm"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}
      - name: Login To GHCR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          build-args: |
            DEVEL=yes
            CI=yes
          tags: |
            ghcr.io/pypi/warehouse:ci-${{ github.run_id }}

  ci:
    needs: build
    uses: ./.github/workflows/ci-base.yml
    with:
      runner: ubuntu-24.04-arm
      image_registry: ghcr.io/pypi/warehouse
      build_id: ci-${{ needs.build.outputs.buildId }}
      use_depot: false
    permissions:
      id-token: write
      packages: read