name: CI
on:
  push:
    branches:
      - main
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
jobs:
  test:
    strategy:
      matrix:
        include:
          - name: Tests
            command: bin/tests --postgresql-host localhost
            needs-python: ${{ true }}
            needs-node: ${{ false }}
          - name: Lint
            command: bin/lint
            needs-python: ${{ true }}
            needs-node: ${{ false }}
          - name: Documentation
            command: bin/docs
            needs-python: ${{ true }}
            needs-node: ${{ false }}
          - name: Dependencies
            command: bin/github-actions-deps
            needs-python: ${{ true }}
            needs-node: ${{ false }}
          - name: Licenses
            command: bin/licenses
            needs-python: ${{ true }}
            needs-node: ${{ false }}
          - name: Translations
            command: bin/translations
            needs-python: ${{ true }}
            needs-node: ${{ false }}
          - name: Static Tests
            command: bin/static_tests
            needs-python: ${{ false }}
            needs-node: ${{ true }}
          - name: Static Lint
            command: bin/static_lint
            needs-python: ${{ false }}
            needs-node: ${{ true }}
          - name: Static Pipeline
            command: bin/static_pipeline
            needs-python: ${{ false }}
            needs-node: ${{ true }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.1
        ports:
          - 5432:5432
    name: ${{ matrix.name }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Install platform dependencies
        run: |
          sudo apt -y update
          sudo apt -y install libcurl4-openssl-dev libssl-dev pkg-config
      - name: Read .python-version
        if: ${{ matrix.needs-python }}
        run: |
           echo "WAREHOUSE_PYTHON_VERSION=$(<.python-version)" >> $GITHUB_ENV
      - uses: actions/setup-python@v2
        if: ${{ matrix.needs-python }}
        with:
          python-version: ${{ env.WAREHOUSE_PYTHON_VERSION }}
      - name: Cache Python dependencies
        if: ${{ matrix.needs-python }}
        uses: actions/cache@v2
        env:
          cache-name: warehouse-cache-pip
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ github.job }}-${{ env.cache-name }}-${{ hashFiles('requirements.txt', 'requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-${{ env.cache-name }}-
            ${{ runner.os }}-${{ github.job }}-
            ${{ runner.os }}-
      - name: Install Python dependencies
        if: ${{ matrix.needs-python }}
        run: |
          pip install -U pip setuptools wheel
          pip install -r requirements.txt --no-deps
          pip install -r requirements/dev.txt
      - uses: actions/setup-node@v2
        if: ${{ matrix.needs-node }}
        with:
          node-version: 14.15.5
      - name: Cache Node dependencies
        if: ${{ matrix.needs-node }}
        uses: actions/cache@v2
        env:
          cache-name: warehouse-cache-npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ github.job }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ github.job }}-${{ env.cache-name }}-
            ${{ runner.os }}-build-${{ github.job }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Node dependencies
        if: ${{ matrix.needs-node }}
        run: npm ci
      - name: Run ${{ matrix.name }}
        run: ${{ matrix.command }}
