name: CI
on:
  push:
    branches:
      - main
  pull_request:
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
jobs:
  test:
    strategy:
      matrix:
        include:
          - name: Tests
            command: bin/tests --postgresql-host localhost
            needs-python: ${{ true }}
            needs-node: ${{ false }}
          - name: Lint
            command: bin/lint
            needs-python: ${{ true }}
            needs-node: ${{ false }}
          - name: Documentation
            command: bin/docs
            needs-python: ${{ true }}
            needs-node: ${{ false }}
          - name: Dependencies
            command: bin/github-actions-deps
            needs-python: ${{ true }}
            needs-node: ${{ false }}
          - name: Licenses
            command: bin/licenses
            needs-python: ${{ true }}
            needs-node: ${{ false }}
          - name: Translations
            command: bin/translations
            needs-python: ${{ true }}
            needs-node: ${{ false }}
          - name: Static Tests
            command: bin/static_tests
            needs-python: ${{ false }}
            needs-node: ${{ true }}
          - name: Static Lint
            command: bin/static_lint
            needs-python: ${{ false }}
            needs-node: ${{ true }}
          - name: Static Pipeline
            command: bin/static_pipeline
            needs-python: ${{ false }}
            needs-node: ${{ true }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.8
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust  # never do this in production!
        # Set health checks to wait until postgres has started
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      stripe:
        image: stripe/stripe-mock:v0.140.0
        ports:
          - 12111:12111
    name: ${{ matrix.name }}
    env:
      BILLING_BACKEND: warehouse.subscriptions.services.MockStripeBillingService api_base=http://localhost:12111 api_version=2020-08-27
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Install platform dependencies
        run: |
          sudo apt -y update
          sudo apt -y install libcurl4-openssl-dev libssl-dev pkg-config
      - uses: actions/setup-python@v4
        if: ${{ matrix.needs-python }}
        with:
          python-version-file: '.python-version'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements/*.txt
      - name: Install Python dependencies
        if: ${{ matrix.needs-python }}
        run: |
          pip install -U pip setuptools wheel
          pip install -r requirements.txt --no-deps
          pip install -r requirements/dev.txt
          pip check
      - uses: actions/setup-node@v3
        if: ${{ matrix.needs-node }}
        with:
          node-version: 14.19.1
          cache: 'npm'
      - name: Install Node dependencies
        if: ${{ matrix.needs-node }}
        run: npm ci
      - name: Run ${{ matrix.name }}
        run: ${{ matrix.command }}
